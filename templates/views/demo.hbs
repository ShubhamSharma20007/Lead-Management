<!doctype html>
<html lang="en">

<head>

    <style>
        dialog {
            width: 40%;
            min-height: 30%;
            position: absolute;
            border: 1px solid lightgray;
            border-radius: 10px;
            padding: 20px;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }

        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .new-class {
            text-transform: capitalize;
        }

        #lableName {
            border: 1px solid rgb(185, 185, 185);
            height: 40px;
        }

        .form-control {
            height: 40px !important;
            border: 1px solid rgb(235, 233, 233);
        }

        p {
            text-transform: capitalize !important;
        }

        .board-item-content {
            min-height: 200px;
            max-height: 300px !important;
            overflow-y: scroll !important;
            font-family: "Overpass", sans-serif !important;
            background: #faebd7b5 !important;
            font-size: 0.999rem !important;
            border-radius: 8px !important;
            line-height: 1.5;
            background-image: url(https://node.scaleedge.in/assets/images/dashboard/circle.svg) !important;
            background-position: start;
            background-size: cover !important;
            background-repeat: no-repeat;
        }

        .board-item-content::-webkit-scrollbar {
            width: 0px
        }

        .slide-container::-webkit-scrollbar {

            height: 9px;
        }

        .slide-container::-webkit-scrollbar-thumb {
            background-color: #8888888f;
            border-radius: 10px;
        }

        .slide-container::-webkit-scrollbar-track {
            background-color: #f1f1f1;
            border-radius: 10px;
        }

        .plan {
            border-radius: 16px;
            box-shadow: 0 30px 30px -25px rgba(0, 38, 255, 0.205);
            padding: 10px;
            background-color: #fff;
            color: #697e91;
            max-width: 300px;
        }

        .plan strong {
            font-weight: 600;
            color: #425275;
        }

        .plan .inner {
            align-items: center;
            padding: 20px;
            background-color: #ecf0ff;
            border-radius: 12px;
            position: relative;
        }

        .plan .pricing {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #bed6fb;
            border-radius: 99em 0 0 99em;
            display: flex;
            align-items: center;
            padding: 0.625em 0.75em;
            font-size: 1.25rem;
            font-weight: 600;
            color: #425475;
        }

        .plan .pricing small {
            color: #707a91;
            font-size: 0.75em;
            margin-left: 0.25em;
        }

        .plan .title {
            font-weight: 600;
            font-size: 1.25rem;
            color: #425675;
        }

        .plan .title+* {
            margin-top: 0.75rem;
        }

        .plan .info+* {
            margin-top: 1rem;
        }

        .plan .features {
            display: flex;
            flex-direction: column;
        }

        .plan .features li {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .plan .features li+* {
            margin-top: 0.75rem;
        }

        .plan .features .icon {
            background-color: #1FCAC5;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            border-radius: 50%;
            width: 20px;
            height: 20px;
        }

        .plan .features .icon svg {
            width: 14px;
            height: 14px;
        }

        .plan .features+* {
            margin-top: 1.25rem;
        }

        .plan .action {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: end;
        }

        .plan .button {
            background-color: #6558d3;
            border-radius: 6px;
            color: #fff;
            font-weight: 500;
            font-size: 1.125rem;
            text-align: center;
            border: 0;
            outline: 0;
            width: 100%;
            padding: 0.625em 0.75em;
            text-decoration: none;
        }

        .plan .button:hover,
        .plan .button:focus {
            background-color: #4133B7;
        }
    </style>
</head>

<body class="vertical  light  ">
    <div class="wrapper">
        {{>Sidebar}}
        <main role="main" class="main-content">
            <div class="content-body p-0">
                <div class="container-fluid p-0">
                    <div class="col-lg-12">
                        <div class="card bg-transparent box-shadow-none border-0 ">
                            <div class="drag-container"></div>
                            <div class="board-container">
                                <div class="d-flex slide-container"
                                    style="overflow-x: auto; width:100%; height:100%;gap:20px">
                                    <div class="board-column todo" id="container1" data-container-id="container1"
                                        ondrop="drop(event)" ondragover="allowDrop(event)">
                                        <div class="board-column-container">
                                            <div class="board-column-header" data-target-status="New Lead">New Lead({{
                                                newLeads.length }})
                                            </div>
                                            <div class="board-column-content-wrapper">
                                                <div class="board-column-content">
                                                    {{#each newLeads}}
                                                    <div class="board-item" draggable="true" ondragstart="drag(event)"
                                                        id="card1_{{this.Id}}" data-lead-id="{{this.Id}}">
                                                        <div class="board-item-content">
                                                            <div class="plan">
                                                                <div class="inner">
                                                                    <span class="pricing">
                                                                        <span>
                                                                            <small><i
                                                                                    class="ri-file-add-line"></i></small>
                                                                        </span>
                                                                    </span>
                                                                    <!-- <p class="title">Professional</p> -->
                                                                    {{#each this.dataValues}}
                                                                    <p class="info" style="font-size: 13px;">{{@key}}:
                                                                        {{this}}</p>
                                                                    {{/each}}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    {{/each}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="board-column working" id="container2" data-container-id="container2"
                                        ondrop="drop(event)" ondragover="allowDrop(event)">
                                        <div class="board-column-container">
                                            <div class="board-column-header" data-target-status="Contact Initiation">
                                                Contact Initiation({{
                                                contactInitiation.length }})</div>
                                            <div class="board-column-content-wrapper">
                                                <div class="board-column-content">
                                                    {{#each contactInitiation}}
                                                    <div class="board-item" draggable="true" ondragstart="drag(event)"
                                                        id="card2_{{this.Id}}" data-lead-id="{{this.Id}}">
                                                        <div class="board-item-content">
                                                            <div class="plan">
                                                                <div class="inner">
                                                                    <span class="pricing">
                                                                        <span>
                                                                            <small><i
                                                                                    class="ri-file-add-line"></i></small>
                                                                        </span>
                                                                    </span>
                                                                    <!-- <p class="title">Professional</p> -->
                                                                    {{#each this.dataValues}}
                                                                    <p class="info" style="font-size: 13px;">{{@key}}:
                                                                        {{this}}</p>
                                                                    {{/each}}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    {{/each}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="board-column todo" id="container3" ondrop="drop(event)"
                                        data-container-id="container3" ondragover="allowDrop(event)">
                                        <div class="board-column-container">
                                            <div class="board-column-header" data-target-status="Schedule Follow Up">
                                                Schedule Follow Up({{
                                                scheduleFollowUp.length }})</div>
                                            <div class="board-column-content-wrapper">
                                                <div class="board-column-content">
                                                    {{#each scheduleFollowUp}}
                                                    <div class="board-item" draggable="true" ondragstart="drag(event)"
                                                        id="card3_{{this.Id}}" data-lead-id="{{this.Id}}">
                                                        <div class="board-item-content">
                                                            <div class="plan">
                                                                <div class="inner">
                                                                    <span class="pricing">
                                                                        <span>
                                                                            <small><i
                                                                                    class="ri-file-add-line"></i></small>
                                                                        </span>
                                                                    </span>
                                                                    <!-- <p class="title">Professional</p> -->
                                                                    {{#each this.dataValues}}
                                                                    <p class="info" style="font-size: 13px">{{@key}}:
                                                                        {{this}}</p>
                                                                    {{/each}}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    {{/each}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </main> <!-- main -->
    </div> <!-- .wrapper -->
    <script src="js/jquery.min.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/moment.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/simplebar.min.js"></script>
    <script src='js/daterangepicker.js'></script>
    <script src='js/jquery.stickOnScroll.js'></script>
    <script src="js/tinycolor-min.js"></script>
    <script src="js/config.js"></script>
    <script src="js/d3.min.js"></script>
    <script src="js/topojson.min.js"></script>
    <script src="js/datamaps.all.min.js"></script>
    <script src="js/datamaps-zoomto.js"></script>
    <script src="js/datamaps.custom.js"></script>
    <script src="js/Chart.min.js"></script>
    <script>
        /* defind global options */
        Chart.defaults.global.defaultFontFamily = base.defaultFontFamily;
        Chart.defaults.global.defaultFontColor = colors.mutedColor;
    </script>
    <script src="js/gauge.min.js"></script>
    <script src="js/jquery.sparkline.min.js"></script>
    <script src="js/apexcharts.min.js"></script>
    <script src="js/apexcharts.custom.js"></script>
    <script src='js/jquery.mask.min.js'></script>
    <script src='js/select2.min.js'></script>
    <script src='js/jquery.steps.min.js'></script>
    <script src='js/jquery.validate.min.js'></script>
    <script src='js/jquery.timepicker.js'></script>
    <script src='js/dropzone.min.js'></script>
    <script src='js/uppy.min.js'></script>
    <script src='js/quill.min.js'></script>
    <script src='js/new.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/muuri@0.9.5/dist/muuri.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/web-animations-js@2.3.2/web-animations.min.js"></script>

    // remove the underscore from the
    <script>
        const info = document.querySelectorAll('.info');
        info.forEach(element => {
            element.innerHTML = element.innerHTML.replace("_", " ");
        })

    </script>

    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.id);
            ev.dataTransfer.setData("containerId", ev.target.parentElement.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var data = ev.dataTransfer.getData("text");
            var draggedElement = document.getElementById(data);
            ev.target.appendChild(draggedElement);

            // Get the unique identifier for the lead
            var leadId = draggedElement.getAttribute('data-lead-id');
            console.log('Lead ID:', leadId);

            // Determine the target_status based on the container ID
            var targetStatus;
            var containerId = findContainerId(ev.target);
            console.log('Container ID:', containerId);

            switch (containerId) {
                case "container1":
                    targetStatus = 'New Lead';
                    break;
                case "container2":
                    targetStatus = 'Contact Initiation';
                    break;
                case "container3":
                    targetStatus = 'Schedule Follow Up';
                    break;
                default:
                    console.error('Invalid container ID:', containerId);
                    return; // Exit the function if container ID is invalid
            }

            console.log('Target Status:', targetStatus);

            // Update the target_status in the database
            fetch(`/updateLeadStatus/${leadId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ target_status: targetStatus })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to update lead status');
                    }
                    // Optional: Reload the page to reflect the changes
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Error updating lead status:', error);
                });
        }

        function findContainerId(element) {
            // Traverse up the DOM tree until finding an element with an ID
            while (element && !element.id) {
                element = element.parentNode;
            }
            return element ? element.id : null;
        }

    </script>

    <script>
        $('.select2').select2(
            {
                theme: 'bootstrap4',
            });
        $('.select2-multi').select2(
            {
                multiple: true,
                theme: 'bootstrap4',
            });
        $('.drgpicker').daterangepicker(
            {
                singleDatePicker: true,
                timePicker: false,
                showDropdowns: true,
                locale:
                {
                    format: 'MM/DD/YYYY'
                }
            });
        $('.time-input').timepicker(
            {
                'scrollDefault': 'now',
                'zindex': '9999' /* fix modal open */
            });
        /** date range picker */
        if ($('.datetimes').length) {
            $('.datetimes').daterangepicker(
                {
                    timePicker: true,
                    startDate: moment().startOf('hour'),
                    endDate: moment().startOf('hour').add(32, 'hour'),
                    locale:
                    {
                        format: 'M/DD hh:mm A'
                    }
                });
        }
        var start = moment().subtract(29, 'days');
        var end = moment();

        function cb(start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
        }
        $('#reportrange').daterangepicker(
            {
                startDate: start,
                endDate: end,
                ranges:
                {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);
        cb(start, end);
        $('.input-placeholder').mask("00/00/0000",
            {
                placeholder: "__/__/____"
            });
        $('.input-zip').mask('00000-000',
            {
                placeholder: "____-___"
            });
        $('.input-money').mask("#.##0,00",
            {
                reverse: true
            });
        $('.input-phoneus').mask('(000) 000-0000');
        $('.input-mixed').mask('AAA 000-S0S');
        $('.input-ip').mask('0ZZ.0ZZ.0ZZ.0ZZ',
            {
                translation:
                {
                    'Z':
                    {
                        pattern: /[0-9]/,
                        optional: true
                    }
                },
                placeholder: "___.___.___.___"
            });
        // editor
        var editor = document.getElementById('editor');
        if (editor) {
            var toolbarOptions = [
                [
                    {
                        'font': []
                    }],
                [
                    {
                        'header': [1, 2, 3, 4, 5, 6, false]
                    }],
                ['bold', 'italic', 'underline', 'strike'],
                ['blockquote', 'code-block'],
                [
                    {
                        'header': 1
                    },
                    {
                        'header': 2
                    }],
                [
                    {
                        'list': 'ordered'
                    },
                    {
                        'list': 'bullet'
                    }],
                [
                    {
                        'script': 'sub'
                    },
                    {
                        'script': 'super'
                    }],
                [
                    {
                        'indent': '-1'
                    },
                    {
                        'indent': '+1'
                    }], // outdent/indent
                [
                    {
                        'direction': 'rtl'
                    }], // text direction
                [
                    {
                        'color': []
                    },
                    {
                        'background': []
                    }], // dropdown with defaults from theme
                [
                    {
                        'align': []
                    }],
                ['clean'] // remove formatting button
            ];
            var quill = new Quill(editor,
                {
                    modules:
                    {
                        toolbar: toolbarOptions
                    },
                    theme: 'snow'
                });
        }
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
    <script>
        var uptarg = document.getElementById('drag-drop-area');
        if (uptarg) {
            var uppy = Uppy.Core().use(Uppy.Dashboard,
                {
                    inline: true,
                    target: uptarg,
                    proudlyDisplayPoweredByUppy: false,
                    theme: 'dark',
                    width: 770,
                    height: 210,
                    plugins: ['Webcam']
                }).use(Uppy.Tus,
                    {
                        endpoint: 'https://master.tus.io/files/'
                    });
            uppy.on('complete', (result) => {
                console.log('Upload complete! We’ve uploaded these files:', result.successful)
            });
        }
    </script>
    <script src="js/apps.js"></script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-56159088-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];

        function gtag() {
            dataLayer.push(arguments);
        }
        gtag('js', new Date());
        gtag('config', 'UA-56159088-1');
    </script>

    <style>
        .drag-container {
            position: fixed;
            left: 0;
            top: 0;
            z-index: 1000;
        }

        .board {
            position: relative;
            display: flex;
            /* Add flex display to arrange columns horizontally */
            overflow-x: auto;
            /* Add horizontal scrolling */
            width: calc(350px * 4);
            /* Adjust the width based on the number of columns */
        }

        .board-column {
            width: 350px;
            /* Set fixed width for each column */
            margin-right: 10px;
            /* Add some space between columns */
        }


        .board-container {
            overflow-x: auto;
            /* Enable horizontal scrolling */
        }

        .board {
            position: relative;
            display: flex;
            /* Add flex display to arrange columns horizontally */
        }

        .board-column {
            width: 350px;
            /* Set fixed width for each column */

        }

        .board-column.muuri-item-releasing {
            z-index: 2;
        }

        .board-column.muuri-item-dragging {
            z-index: 3;
            cursor: move;
        }

        .board-column-container {
            position: relative;
            width: 100%;
            height: 100%;

        }

        .board-column {
            width: 280px;

                {
                    {
                    !-- transform: translate(0, 0) !;
                    --
                }
            }
        }

        .board-column-header {
            position: relative;
            height: 50px;
            line-height: 50px;
            overflow: hidden;
            padding: 0 20px;
            text-align: center;
            background: #333;
            color: #fff;
            border-radius: 5px 5px 0 0;
            font-weight: bold;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

            {
                {
                !-- @media (max-width: 600px) {
                    .board-column-header {
                        text-indent: -1000px;
                    }
                }

                --
            }
        }

        .board-column.todo .board-column-header {
            background: #4A9FF9;
        }

        .board-column.working .board-column-header {
            background: #f9944a;
        }

        .board-column.done .board-column-header {
            background: #2ac06d;
        }

        .board-column-content-wrapper,
        .board-column-header {
            width: 290px !important;
        }

        .board-column-content-wrapper {
            position: relative;
            padding: 8px;
            background: #f0f0f0;
            height: calc(100vh - 90px);
            overflow-y: auto;
            border-radius: 0 0 5px 5px;
        }

        .board-column-content {
            position: relative;
            min-height: 100%;
        }

        .board-item {
            position: absolute;
            width: calc(100% - 16px);
            margin: 8px;
        }

        .board-item.muuri-item-releasing {
            z-index: 9998;
        }

        .board-item.muuri-item-dragging {
            z-index: 9999;
            cursor: move;
        }

        .board-item.muuri-item-hidden {
            z-index: 0;
        }

        .board-item-content {
            position: relative;
            border-radius: 4px;
            font-size: 17px;
            cursor: pointer;

        }

        @media (max-width: 600px) {
            .board-item-content {
                text-align: center;
            }

            .board-item-content span {
                display: none;
            }
        }
    </style>

</body>

</html>